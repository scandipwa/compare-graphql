##
# ScandiPWA_CompareGraphQl
#
# @category    ScandiPWA
# @package     ScandiPWA_CatalogGraphQl
# @author      <info@scandiweb.com>
# @copyright   Copyright (c) 2018 Scandiweb, Ltd (https://scandiweb.com)
##

type Mutation {
    addProductToCompare(product_sku: String!, guestCartId: String): CompareProductItem @resolver(class: "\\ScandiPWA\\CompareGraphQl\\Model\\Resolver\\AddProductToCompare")
    removeCompareProduct(product_sku: String!, guestCartId: String): Boolean @resolver(class:"\\ScandiPWA\\CompareGraphQl\\Model\\Resolver\\RemoveCompareProduct")
    clearCompareProducts(guestCartId: String): Boolean @resolver(class:"\\ScandiPWA\\CompareGraphQl\\Model\\Resolver\\ClearCompareProducts")
}

type Query {
    CompareProducts(guestCartId: String): CompareProductsOutput @resolver(class: "\\ScandiPWA\\CompareGraphQl\\Model\\Resolver\\CompareProductsResolver") @doc(description: "The compare products query returns the contents of a customer's compared products")
}

type CompareProductItem {
    entity_id: Int @doc(description: "The compare product entity ID")
    store_id: Int @doc(description: "The ID of the store from which the compare product is added")
    sku: String @doc(description: "Sku of the compare product")
    name: String @doc(description: "The name of the compare product")
}

type CompareProductsOutput {
    products: [ProductInterface] @doc(description: "Items in the compare list")
    count: Int @doc(description: "The number of items in the compare list")
}

interface ProductInterface {
    comparableAttributes: [AttributeWithValue] @resolver(class:"\\ScandiPWA\\CompareGraphQl\\Model\\Resolver\\ComparableAttributes")
    parent_url_key: String @doc(description: "Parent product url key")
}
